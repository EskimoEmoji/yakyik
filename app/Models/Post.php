<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Location\Coordinate;
use Location\Distance\Vincenty;

class Post extends Model
{
    protected $guarded = [];

    use HasFactory;

    //All COMMENTS for a post
    public function comments(){
        return $this->hasMany(Comment::class,'post_id')->latest();
    }

    //All VOTES for a post
    public function voters(){
        return $this->hasMany(Vote::class,'post_id');
    }

    public function increment($column, $amount = 1, array $extra = [])
    {
        return parent::increment($column, $amount, $extra); // TODO: Change the autogenerated stub
    }

    public function decrement($column, $amount = 1, array $extra = [])
    {
        return parent::decrement($column, $amount, $extra); // TODO: Change the autogenerated stub
    }

    public function path(){
        return "/posts/{$this->id}";
    }

    public function owner(){
        return $this->belongsTo(User::class,'user_id');
    }

    //Distance between the User and a Post in Miles
    public function distance($latitude, $longitude){

        if(auth()->user()){
            $userData = json_decode(auth()->user()->location);
        } else {
            return null;
        }

        $coordinate1 = new Coordinate($userData->latitude, $userData->longitude);
        $coordinate2 = new Coordinate($latitude, $longitude);

        $calculator = new Vincenty();

        $meters = $calculator->getDistance($coordinate1, $coordinate2);
        $miles = ($meters / 1609.34);
        return ceil($miles);
    }

}
